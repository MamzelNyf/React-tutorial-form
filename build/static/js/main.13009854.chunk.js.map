{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["Title","TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","i","character","className","ReactDOM","render","document","getElementById"],"mappings":"yQAEMA,EAAQ,WACV,OAAO,yCAGLC,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,sCAMVC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAIC,GACtC,OACK,wBAAIC,IAAKD,GAAT,IACG,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAMhB,OAAO,+BAAQJ,IAoBJU,E,iLAfF,IAAD,EACqCC,KAAKZ,MAAvCE,EADH,EACGA,cAAeQ,EADlB,EACkBA,gBAEtB,OACI,6BACI,kBAAC,EAAD,MACA,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,U,GAT1DG,a,OCqBDC,E,YApDf,WAAYd,GAAQ,IAAD,8BACf,4CAAMA,KAYVe,aAAe,SAAAC,GAAU,IAAD,EACGA,EAAMC,OAAtBV,EADa,EACbA,KAAMW,EADO,EACPA,MAEb,EAAKC,SAAL,eACKZ,EAAOW,KAjBG,EAqBnBE,WAAa,WACT,EAAKpB,MAAMqB,aAAa,EAAKC,OAE7B,EAAKH,SAAS,EAAKI,eArBnB,EAAKA,aAAe,CAChBhB,KAAK,GACLC,IAAK,IAGT,EAAKc,MAAQ,EAAKC,aARH,E,sEA4BV,IAAD,EACgBX,KAAKU,MAAlBf,EADH,EACGA,KAAMC,EADT,EACSA,IAEb,OACI,8BACI,uCACA,2BACIgB,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUb,KAAKG,eACnB,sCACA,2BACIS,KAAK,OACLjB,KAAK,MACLW,MAAOV,EACPiB,SAAUb,KAAKG,eACnB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GA9C/CP,aCqEJa,E,2MAjEXJ,MAAQ,CACJK,WAAW,I,EAmBfjB,gBAAkB,SAAAL,GAAS,IAChBsB,EAAc,EAAKL,MAAnBK,WAEP,EAAKR,SAAS,CACVQ,WAAYA,EAAWC,QAAO,SAACD,EAAYE,GACvC,OAAOA,IAAMxB,Q,EAIzBgB,aAAe,SAAAS,GACX,EAAKX,SAAS,CAACQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BG,O,wEAGjD,IACEH,EAAcf,KAAKU,MAAnBK,WAoBP,OACI,yBAAKI,UAAU,aACX,oDACA,kBAAC,EAAD,CAAO7B,cAAeyB,EAAYjB,gBAAiBE,KAAKF,kBAExD,kBAAC,EAAD,CAAMW,aAAcT,KAAKS,oB,GA5DvBR,a,MCGlBmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.13009854.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nconst Title = () => {\r\n    return <h2>Subtitle</h2> \r\n    //Not return does not need parentheses when contained on one line\r\n}\r\nconst TableHeader = () => {\r\n    return(\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = props => {//with props, it's one way data flow\r\n    const rows = props.characterData.map((row,index) => { //props are read-only, effective way to pass data  to a React component\r\n        return (\r\n             <tr key={index}> {/*always use keys when making lists in React, as they help identify each list item */}\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                    {/* pass key/index through as a parameter, so the filter function knows which item to remove. */}\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\n\r\nclass Table extends Component {\r\n    render(){\r\n        const {characterData, removeCharacter} = this.props; //Since we're passing it down to TableBody from Table, we have to pass it as a props\r\n\r\n        return(\r\n            <div>\r\n                <Title />\r\n                <table>\r\n                    <TableHeader /> \r\n                    <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table","import React, {Component} from 'react'\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            name:'',\r\n            job: '',\r\n        };\r\n\r\n        this.state = this.initialState\r\n        //update the state of Form every time a field is changed in the form, and when we submit, \r\n        //all that data will pass to the App state, which will then update the Table.\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {name, value } = event.target \r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        //pass the Form state through as the character parameter we defined earlier\r\n        this.setState(this.initialState)\r\n        //reset the state to the initial state, to clear the form after submit.\r\n    }\r\n\r\n    render(){\r\n        const {name, job} = this.state;\r\n\r\n        return(\r\n            <form>\r\n                <label>Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label>Job</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n                {/* using an onClick instead of an onSubmit since we're not using the standard submit functionality. The click will call the submitForm */}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n    export default Form;\r\n","import React, {Component} from 'react'\r\nimport Table from './Table'\r\nimport Form from './Form'\r\n\r\n\r\nclass App extends Component {\r\n    state = {// state as any data that should be saved and modified without necessarily being added to a database\r\n        characters:[\r\n            // { // remove all the hard-coded data from state-characters, it will be updated through the form\r\n            // name: 'Charlie',\r\n            // job: 'Janitor',\r\n            // },\r\n            // {\r\n            // name: 'Mac',\r\n            // job: 'Bouncer',\r\n            // },\r\n            // {\r\n            // name: 'Dee',\r\n            // job: 'Aspring actress',\r\n            // },\r\n            // {\r\n            // name: 'Dennis',\r\n            // job: 'Bartender',\r\n            // },\r\n        ],\r\n    }\r\n    removeCharacter = index => {// create a removeCharacter method on the parent App class to be able to remove a character from the table\r\n        const {characters} = this.state\r\n\r\n        this.setState({//this.setState(), a built-in method for manipulating state.\r\n            characters: characters.filter((characters, i) => {//filter does not mutate but rather creates a new array\r\n                return i !== index //filter the array based on an index that we pass through, and return the new array.\r\n            }),\r\n        })\r\n    }\r\n    handleSubmit = character => {\r\n        this.setState({characters: [...this.state.characters, character]})\r\n        //update the state by taking the existing this.state.characters and adding the new character parameter, using the ES6 spread operator.\r\n    }\r\n    render(){\r\n        const {characters} = this.state\r\n\r\n        // const characters = [\r\n        //     {\r\n        //         name: 'Charlie',\r\n        //     job: 'Janitor',\r\n        //     },\r\n        //     {\r\n        //     name: 'Mac',\r\n        //     job: 'Bouncer',\r\n        //     },\r\n        //     {\r\n        //     name: 'Dee',\r\n        //     job: 'Aspring actress',\r\n        //     },\r\n        //     {\r\n        //     name: 'Dennis',\r\n        //     job: 'Bartender',\r\n        //     },\r\n        // ]\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>React, take it easy!</h1>\r\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n                {/* pass the removeCharacter function through as a prop to Table */}\r\n                <Form handleSubmit={this.handleSubmit}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n//import App from './Api'\r\nimport './index.css'\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}